{"version":3,"sources":["src/js/main.js","src/blocks/checkbox-list/checkbox-list.js","src/blocks/datepicker/datepicker.js","src/blocks/dropdown/dropdown.js","src/blocks/range-slider/range-slider.js","src/js/search.js"],"names":["console","log","$","document","ready","hide","click","slideToggle","rotated","find","css","window","undefined","$body","$datepickersContainer","datepicker","containerBuilt","defaults","hotKeys","Datepicker","classes","inline","language","startDate","Date","firstDay","weekends","dateFormat","altField","altFieldDateFormat","toggleSelected","keyboardNav","position","offset","view","minView","showOtherMonths","selectOtherMonths","moveToOtherMonthsOnSelect","showOtherYears","selectOtherYears","moveToOtherYearsOnSelect","minDate","maxDate","disableNavWhenOutOfRange","multipleDates","multipleDatesSeparator","range","todayButton","clearButton","showEvent","autoClose","monthsField","prevHtml","nextHtml","navTitles","days","months","years","timepicker","onlyTimepicker","dateTimeSeparator","timeFormat","minHours","maxHours","minMinutes","maxMinutes","hoursStep","minutesStep","onSelect","onShow","onHide","onChangeMonth","onChangeYear","onChangeDecade","onChangeView","onRenderCell","el","options","$el","opts","extend","data","nodeName","elIsInput","$altField","inited","visible","silent","currentDate","currentView","_createShortCuts","selectedDates","views","keys","minRange","maxRange","_prevOnSelectValue","init","prototype","VERSION","viewIndexes","_buildDatepickersContainer","_buildBaseHtml","_defineLocale","_syncWithMinMaxDates","_setPositionClasses","_bindEvents","_bindKeyboardEvents","$datepicker","on","_onMouseDownDatepicker","bind","_onMouseUpDatepicker","addClass","fn","Timepicker","_bindTimepickerEvents","Body","show","nav","Navigation","_onClickCell","_onMouseEnterCell","_onMouseLeaveCell","_onShowEvent","_onMouseUpEl","_onBlur","_onKeyUpGeneral","_onResize","_onMouseUpBody","_onKeyDown","_onKeyUp","_onHotKey","_onTimeChange","isWeekend","day","indexOf","lang","loc","warn","ru","join","boundary","_getWordBoundaryRegExp","match","ampm","append","$appendTarget","$inline","insertAfter","appendTo","$content","$nav","_triggerOnChange","length","formattedDates","parsedSelected","getParsedDate","_this","dates","year","month","date","hours","minutes","map","formatDate","parsedDate","next","d","o","curDecade","prev","string","result","validHours","locale","leadingZero","getLeadingZeroNum","decade","getDecade","fullHours","dayPeriod","replacer","_replacer","_getValidHoursFromDate","test","replace","getTime","toUpperCase","fullDate","daysShort","fullMonth","monthsShort","fullMinutes","toString","slice","str","reg","p1","p2","p3","sign","symbols","RegExp","selectDate","len","newDate","Array","isArray","forEach","lastSelectedDate","_setTime","_trigger","setHours","setMinutes","getMonth","getFullYear","_render","_isSelected","push","bigger","_setInputValue","timepickerIsActive","removeDate","selected","some","curDate","i","isSame","splice","today","clear","update","param","value","arguments","_addButtonsIfNeed","setPosition","_handleDate","_updateRanges","_updateCurrentTime","curTime","minTime","maxTime","checkDate","cellType","res","altValues","format","altFormat","val","_isInRange","type","time","min","max","dMinTime","dMaxTime","types","_getDimensions","width","outerWidth","height","outerHeight","left","top","_getDateFromCell","cell","pos","main","split","removeAttr","dims","selfDims","secondary","_bindVisionEvents","removeClass","focused","inFocus","blur","down","_changeView","up","event","off","one","dir","nextView","viewIndex","_handleHotKey","key","focusedParsed","totalDaysInNextMonth","_getFocusedDate","monthChanged","yearChanged","decadeChanged","y","m","getDaysCount","_registerKey","curKey","_unRegisterKey","index","_isHotKeyPressed","currentHotKey","found","pressedKeys","sort","hotKey","every","args","trigger","_focusNextCell","keyCode","nd","getDate","_getCell","$cell","selector","destroy","closest","remove","_handleAlreadySelectedDates","alreadySelected","selectedDate","e","originalEvent","timepickerFocus","focus","setTimeout","code","which","preventDefault","hasClass","target","less","_update","h","_focused","prevView","substring","getDay","getHours","getMinutes","firstYear","Math","floor","template","source","date1","date2","d1","d2","_type","conditions","dateCompareTo","num","parseInt","resetTime","each","Constructor","daysMin","templates","dp","proxy","$names","$cells","_getDayNamesHtml","curDay","html","_getCellContents","parent","render","disabled","_getDaysHtml","totalMonthDays","firstMonthDay","lastMonthDay","daysFromPevMonth","daysFromNextMonth","_getDayHtml","content","_getMonthsHtml","_getMonthHtml","_getYearsHtml","_getYearHtml","_renderTypes","dayNames","attr","acitve","active","_handleClick","$buttonsContainer","_onClickNavButton","_onClickNavTitle","_addButton","title","_getTitle","setNavStatus","_addButtonsContainer","action","label","_disableNav","_activateNav","inst","input","_buildHTML","navigator","userAgent","_onSelectDate","$ranges","_onChangeRange","_onMouseUpRange","_onMouseEnterRange","_onMouseOutRange","_date","_setMinTimeFromDate","_setMaxTimeFromDate","_setDefaultMinMaxTime","_validateHoursMinutes","lz","hourMin","hourMax","hourStep","hourValue","hourVisible","displayHours","minMin","minMax","minStep","minValue","_template","$timepicker","$hours","$minutes","$hoursText","$minutesText","$ampm","_ampm","_hours","$target","name","jQuery","siblings","jRange","apply","onstatechange","ondragend","onbarclicked","isRange","showLabels","showScale","step","theme","disable","snap","pointers","lowPointer","highPointer","labels","domNode","lowLabel","highLabel","scale","bar","clickableBar","interval","inputNode","attachEvents","stopPropagation","pointer","x","isSingle","firstLeft","firstHalfWidth","lastLeft","leftSide","rightSide","self","leftPos","rightPos","circleWidth","expPos","highPos","animate","currentValue","diff","expectedPosition","values","prc","valuesToPrc","s","parseFloat","text","lowPrc","highPrc","isDecimal","to","final","call","isReadonly","toggleDisable","updateRange","setValue","$this","option","from"],"mappings":"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","file":"search.24cd3153.js","sourceRoot":"..","sourcesContent":["import classes from '../scss/main.scss';\r\n// import '../../index.pug'\r\n// import '../../search.pug'\r\n// import '../../booking.pug'\r\n// import '../../login.pug'\r\n// import '../../registration.pug'\r\n\r\nexport default () => {\r\n  console.log('All loaded');\r\n};","$(document).ready(function() {\r\n  $(\".checkbox-list-content\").hide();\r\n  $(\".checkbox-list-header\").click(function(){\r\n    $(\".checkbox-list-content\").slideToggle(\"fast\");\r\n  });\r\n\r\n  var rotated = false;\r\n\r\n  $(\".checkbox-list-header\").click(function() {\r\n    if (!rotated) {\r\n      $(this).find(\".checkbox-list-header__arrow\").css({\r\n        \"transform\": \"rotate(180deg)\"\r\n      });\r\n    } else {\r\n      $(this).find(\".checkbox-list-header__arrow\").css({\r\n        \"transform\": \"rotate(0deg)\"\r\n      });\r\n    }\r\n    // Toggle the flag\r\n    rotated = !rotated;\r\n  });\r\n})",";(function (window, $, undefined) { ;(function () {\n    var VERSION = '2.2.3',\n        pluginName = 'datepicker',\n        autoInitSelector = '.datepicker-here',\n        $body, $datepickersContainer,\n        containerBuilt = false,\n        baseTemplate = '' +\n            '<div class=\"datepicker\">' +\n            '<i class=\"datepicker--pointer\"></i>' +\n            '<nav class=\"datepicker--nav\"></nav>' +\n            '<div class=\"datepicker--content\"></div>' +\n            '</div>',\n        defaults = {\n            classes: '',\n            inline: false,\n            language: 'ru',\n            startDate: new Date(),\n            firstDay: '',\n            weekends: [6, 0],\n            dateFormat: '',\n            altField: '',\n            altFieldDateFormat: '@',\n            toggleSelected: true,\n            keyboardNav: true,\n\n            position: 'bottom left',\n            offset: 12,\n\n            view: 'days',\n            minView: 'days',\n\n            showOtherMonths: true,\n            selectOtherMonths: true,\n            moveToOtherMonthsOnSelect: true,\n\n            showOtherYears: true,\n            selectOtherYears: true,\n            moveToOtherYearsOnSelect: true,\n\n            minDate: '',\n            maxDate: '',\n            disableNavWhenOutOfRange: true,\n\n            multipleDates: false, // Boolean or Number\n            multipleDatesSeparator: ',',\n            range: false,\n\n            todayButton: false,\n            clearButton: false,\n\n            showEvent: 'focus',\n            autoClose: false,\n\n            // navigation\n            monthsField: 'monthsShort',\n            prevHtml: '<svg><path d=\"M 17,12 l -5,5 l 5,5\"></path></svg>',\n            nextHtml: '<svg><path d=\"M 14,12 l 5,5 l -5,5\"></path></svg>',\n            navTitles: {\n                days: 'MM, <i>yyyy</i>',\n                months: 'yyyy',\n                years: 'yyyy1 - yyyy2'\n            },\n\n            // timepicker\n            timepicker: false,\n            onlyTimepicker: false,\n            dateTimeSeparator: ' ',\n            timeFormat: '',\n            minHours: 0,\n            maxHours: 24,\n            minMinutes: 0,\n            maxMinutes: 59,\n            hoursStep: 1,\n            minutesStep: 1,\n\n            // events\n            onSelect: '',\n            onShow: '',\n            onHide: '',\n            onChangeMonth: '',\n            onChangeYear: '',\n            onChangeDecade: '',\n            onChangeView: '',\n            onRenderCell: ''\n        },\n        hotKeys = {\n            'ctrlRight': [17, 39],\n            'ctrlUp': [17, 38],\n            'ctrlLeft': [17, 37],\n            'ctrlDown': [17, 40],\n            'shiftRight': [16, 39],\n            'shiftUp': [16, 38],\n            'shiftLeft': [16, 37],\n            'shiftDown': [16, 40],\n            'altUp': [18, 38],\n            'altRight': [18, 39],\n            'altLeft': [18, 37],\n            'altDown': [18, 40],\n            'ctrlShiftUp': [16, 17, 38]\n        },\n        datepicker;\n\n    var Datepicker  = function (el, options) {\n        this.el = el;\n        this.$el = $(el);\n\n        this.opts = $.extend(true, {}, defaults, options, this.$el.data());\n\n        if ($body == undefined) {\n            $body = $('body');\n        }\n\n        if (!this.opts.startDate) {\n            this.opts.startDate = new Date();\n        }\n\n        if (this.el.nodeName == 'INPUT') {\n            this.elIsInput = true;\n        }\n\n        if (this.opts.altField) {\n            this.$altField = typeof this.opts.altField == 'string' ? $(this.opts.altField) : this.opts.altField;\n        }\n\n        this.inited = false;\n        this.visible = false;\n        this.silent = false; // Need to prevent unnecessary rendering\n\n        this.currentDate = this.opts.startDate;\n        this.currentView = this.opts.view;\n        this._createShortCuts();\n        this.selectedDates = [];\n        this.views = {};\n        this.keys = [];\n        this.minRange = '';\n        this.maxRange = '';\n        this._prevOnSelectValue = '';\n\n        this.init()\n    };\n\n    datepicker = Datepicker;\n\n    datepicker.prototype = {\n        VERSION: VERSION,\n        viewIndexes: ['days', 'months', 'years'],\n\n        init: function () {\n            if (!containerBuilt && !this.opts.inline && this.elIsInput) {\n                this._buildDatepickersContainer();\n            }\n            this._buildBaseHtml();\n            this._defineLocale(this.opts.language);\n            this._syncWithMinMaxDates();\n\n            if (this.elIsInput) {\n                if (!this.opts.inline) {\n                    // Set extra classes for proper transitions\n                    this._setPositionClasses(this.opts.position);\n                    this._bindEvents()\n                }\n                if (this.opts.keyboardNav && !this.opts.onlyTimepicker) {\n                    this._bindKeyboardEvents();\n                }\n                this.$datepicker.on('mousedown', this._onMouseDownDatepicker.bind(this));\n                this.$datepicker.on('mouseup', this._onMouseUpDatepicker.bind(this));\n            }\n\n            if (this.opts.classes) {\n                this.$datepicker.addClass(this.opts.classes)\n            }\n\n            if (this.opts.timepicker) {\n                this.timepicker = new $.fn.datepicker.Timepicker(this, this.opts);\n                this._bindTimepickerEvents();\n            }\n\n            if (this.opts.onlyTimepicker) {\n                this.$datepicker.addClass('-only-timepicker-');\n            }\n\n            this.views[this.currentView] = new $.fn.datepicker.Body(this, this.currentView, this.opts);\n            this.views[this.currentView].show();\n            this.nav = new $.fn.datepicker.Navigation(this, this.opts);\n            this.view = this.currentView;\n\n            this.$el.on('clickCell.adp', this._onClickCell.bind(this));\n            this.$datepicker.on('mouseenter', '.datepicker--cell', this._onMouseEnterCell.bind(this));\n            this.$datepicker.on('mouseleave', '.datepicker--cell', this._onMouseLeaveCell.bind(this));\n\n            this.inited = true;\n        },\n\n        _createShortCuts: function () {\n            this.minDate = this.opts.minDate ? this.opts.minDate : new Date(-8639999913600000);\n            this.maxDate = this.opts.maxDate ? this.opts.maxDate : new Date(8639999913600000);\n        },\n\n        _bindEvents : function () {\n            this.$el.on(this.opts.showEvent + '.adp', this._onShowEvent.bind(this));\n            this.$el.on('mouseup.adp', this._onMouseUpEl.bind(this));\n            this.$el.on('blur.adp', this._onBlur.bind(this));\n            this.$el.on('keyup.adp', this._onKeyUpGeneral.bind(this));\n            $(window).on('resize.adp', this._onResize.bind(this));\n            $('body').on('mouseup.adp', this._onMouseUpBody.bind(this));\n        },\n\n        _bindKeyboardEvents: function () {\n            this.$el.on('keydown.adp', this._onKeyDown.bind(this));\n            this.$el.on('keyup.adp', this._onKeyUp.bind(this));\n            this.$el.on('hotKey.adp', this._onHotKey.bind(this));\n        },\n\n        _bindTimepickerEvents: function () {\n            this.$el.on('timeChange.adp', this._onTimeChange.bind(this));\n        },\n\n        isWeekend: function (day) {\n            return this.opts.weekends.indexOf(day) !== -1;\n        },\n\n        _defineLocale: function (lang) {\n            if (typeof lang == 'string') {\n                this.loc = $.fn.datepicker.language[lang];\n                if (!this.loc) {\n                    console.warn('Can\\'t find language \"' + lang + '\" in Datepicker.language, will use \"ru\" instead');\n                    this.loc = $.extend(true, {}, $.fn.datepicker.language.ru)\n                }\n\n                this.loc = $.extend(true, {}, $.fn.datepicker.language.ru, $.fn.datepicker.language[lang])\n            } else {\n                this.loc = $.extend(true, {}, $.fn.datepicker.language.ru, lang)\n            }\n\n            if (this.opts.dateFormat) {\n                this.loc.dateFormat = this.opts.dateFormat\n            }\n\n            if (this.opts.timeFormat) {\n                this.loc.timeFormat = this.opts.timeFormat\n            }\n\n            if (this.opts.firstDay !== '') {\n                this.loc.firstDay = this.opts.firstDay\n            }\n\n            if (this.opts.timepicker) {\n                this.loc.dateFormat = [this.loc.dateFormat, this.loc.timeFormat].join(this.opts.dateTimeSeparator);\n            }\n\n            if (this.opts.onlyTimepicker) {\n                this.loc.dateFormat = this.loc.timeFormat;\n            }\n\n            var boundary = this._getWordBoundaryRegExp;\n            if (this.loc.timeFormat.match(boundary('aa')) ||\n                this.loc.timeFormat.match(boundary('AA'))\n            ) {\n               this.ampm = true;\n            }\n        },\n\n        _buildDatepickersContainer: function () {\n            containerBuilt = true;\n            $body.append('<div class=\"datepickers-container\" id=\"datepickers-container\"></div>');\n            $datepickersContainer = $('#datepickers-container');\n        },\n\n        _buildBaseHtml: function () {\n            var $appendTarget,\n                $inline = $('<div class=\"datepicker-inline\">');\n\n            if(this.el.nodeName == 'INPUT') {\n                if (!this.opts.inline) {\n                    $appendTarget = $datepickersContainer;\n                } else {\n                    $appendTarget = $inline.insertAfter(this.$el)\n                }\n            } else {\n                $appendTarget = $inline.appendTo(this.$el)\n            }\n\n            this.$datepicker = $(baseTemplate).appendTo($appendTarget);\n            this.$content = $('.datepicker--content', this.$datepicker);\n            this.$nav = $('.datepicker--nav', this.$datepicker);\n        },\n\n        _triggerOnChange: function () {\n            if (!this.selectedDates.length) {\n                // Prevent from triggering multiple onSelect callback with same argument (empty string) in IE10-11\n                if (this._prevOnSelectValue === '') return;\n                this._prevOnSelectValue = '';\n                return this.opts.onSelect('', '', this);\n            }\n\n            var selectedDates = this.selectedDates,\n                parsedSelected = datepicker.getParsedDate(selectedDates[0]),\n                formattedDates,\n                _this = this,\n                dates = new Date(\n                    parsedSelected.year,\n                    parsedSelected.month,\n                    parsedSelected.date,\n                    parsedSelected.hours,\n                    parsedSelected.minutes\n                );\n\n                formattedDates = selectedDates.map(function (date) {\n                    return _this.formatDate(_this.loc.dateFormat, date)\n                }).join(this.opts.multipleDatesSeparator);\n\n            // Create new dates array, to separate it from original selectedDates\n            if (this.opts.multipleDates || this.opts.range) {\n                dates = selectedDates.map(function(date) {\n                    var parsedDate = datepicker.getParsedDate(date);\n                    return new Date(\n                        parsedDate.year,\n                        parsedDate.month,\n                        parsedDate.date,\n                        parsedDate.hours,\n                        parsedDate.minutes\n                    );\n                })\n            }\n\n            this._prevOnSelectValue = formattedDates;\n            this.opts.onSelect(formattedDates, dates, this);\n        },\n\n        next: function () {\n            var d = this.parsedDate,\n                o = this.opts;\n            switch (this.view) {\n                case 'days':\n                    this.date = new Date(d.year, d.month + 1, 1);\n                    if (o.onChangeMonth) o.onChangeMonth(this.parsedDate.month, this.parsedDate.year);\n                    break;\n                case 'months':\n                    this.date = new Date(d.year + 1, d.month, 1);\n                    if (o.onChangeYear) o.onChangeYear(this.parsedDate.year);\n                    break;\n                case 'years':\n                    this.date = new Date(d.year + 10, 0, 1);\n                    if (o.onChangeDecade) o.onChangeDecade(this.curDecade);\n                    break;\n            }\n        },\n\n        prev: function () {\n            var d = this.parsedDate,\n                o = this.opts;\n            switch (this.view) {\n                case 'days':\n                    this.date = new Date(d.year, d.month - 1, 1);\n                    if (o.onChangeMonth) o.onChangeMonth(this.parsedDate.month, this.parsedDate.year);\n                    break;\n                case 'months':\n                    this.date = new Date(d.year - 1, d.month, 1);\n                    if (o.onChangeYear) o.onChangeYear(this.parsedDate.year);\n                    break;\n                case 'years':\n                    this.date = new Date(d.year - 10, 0, 1);\n                    if (o.onChangeDecade) o.onChangeDecade(this.curDecade);\n                    break;\n            }\n        },\n\n        formatDate: function (string, date) {\n            date = date || this.date;\n            var result = string,\n                boundary = this._getWordBoundaryRegExp,\n                locale = this.loc,\n                leadingZero = datepicker.getLeadingZeroNum,\n                decade = datepicker.getDecade(date),\n                d = datepicker.getParsedDate(date),\n                fullHours = d.fullHours,\n                hours = d.hours,\n                ampm = string.match(boundary('aa')) || string.match(boundary('AA')),\n                dayPeriod = 'am',\n                replacer = this._replacer,\n                validHours;\n\n            if (this.opts.timepicker && this.timepicker && ampm) {\n                validHours = this.timepicker._getValidHoursFromDate(date, ampm);\n                fullHours = leadingZero(validHours.hours);\n                hours = validHours.hours;\n                dayPeriod = validHours.dayPeriod;\n            }\n\n            switch (true) {\n                case /@/.test(result):\n                    result = result.replace(/@/, date.getTime());\n                case /aa/.test(result):\n                    result = replacer(result, boundary('aa'), dayPeriod);\n                case /AA/.test(result):\n                    result = replacer(result, boundary('AA'), dayPeriod.toUpperCase());\n                case /dd/.test(result):\n                    result = replacer(result, boundary('dd'), d.fullDate);\n                case /d/.test(result):\n                    result = replacer(result, boundary('d'), d.date);\n                case /DD/.test(result):\n                    result = replacer(result, boundary('DD'), locale.days[d.day]);\n                case /D/.test(result):\n                    result = replacer(result, boundary('D'), locale.daysShort[d.day]);\n                case /mm/.test(result):\n                    result = replacer(result, boundary('mm'), d.fullMonth);\n                case /m/.test(result):\n                    result = replacer(result, boundary('m'), d.month + 1);\n                case /MM/.test(result):\n                    result = replacer(result, boundary('MM'), this.loc.months[d.month]);\n                case /M/.test(result):\n                    result = replacer(result, boundary('M'), locale.monthsShort[d.month]);\n                case /ii/.test(result):\n                    result = replacer(result, boundary('ii'), d.fullMinutes);\n                case /i/.test(result):\n                    result = replacer(result, boundary('i'), d.minutes);\n                case /hh/.test(result):\n                    result = replacer(result, boundary('hh'), fullHours);\n                case /h/.test(result):\n                    result = replacer(result, boundary('h'), hours);\n                case /yyyy/.test(result):\n                    result = replacer(result, boundary('yyyy'), d.year);\n                case /yyyy1/.test(result):\n                    result = replacer(result, boundary('yyyy1'), decade[0]);\n                case /yyyy2/.test(result):\n                    result = replacer(result, boundary('yyyy2'), decade[1]);\n                case /yy/.test(result):\n                    result = replacer(result, boundary('yy'), d.year.toString().slice(-2));\n            }\n\n            return result;\n        },\n\n        _replacer: function (str, reg, data) {\n            return str.replace(reg, function (match, p1,p2,p3) {\n                return p1 + data + p3;\n            })\n        },\n\n        _getWordBoundaryRegExp: function (sign) {\n            var symbols = '\\\\s|\\\\.|-|/|\\\\\\\\|,|\\\\$|\\\\!|\\\\?|:|;';\n\n            return new RegExp('(^|>|' + symbols + ')(' + sign + ')($|<|' + symbols + ')', 'g');\n        },\n\n\n        selectDate: function (date) {\n            var _this = this,\n                opts = _this.opts,\n                d = _this.parsedDate,\n                selectedDates = _this.selectedDates,\n                len = selectedDates.length,\n                newDate = '';\n\n            if (Array.isArray(date)) {\n                date.forEach(function (d) {\n                    _this.selectDate(d)\n                });\n                return;\n            }\n\n            if (!(date instanceof Date)) return;\n\n            this.lastSelectedDate = date;\n\n            // Set new time values from Date\n            if (this.timepicker) {\n                this.timepicker._setTime(date);\n            }\n\n            // On this step timepicker will set valid values in it's instance\n            _this._trigger('selectDate', date);\n\n            // Set correct time values after timepicker's validation\n            // Prevent from setting hours or minutes which values are lesser then `min` value or\n            // greater then `max` value\n            if (this.timepicker) {\n                date.setHours(this.timepicker.hours);\n                date.setMinutes(this.timepicker.minutes)\n            }\n\n            if (_this.view == 'days') {\n                if (date.getMonth() != d.month && opts.moveToOtherMonthsOnSelect) {\n                    newDate = new Date(date.getFullYear(), date.getMonth(), 1);\n                }\n            }\n\n            if (_this.view == 'years') {\n                if (date.getFullYear() != d.year && opts.moveToOtherYearsOnSelect) {\n                    newDate = new Date(date.getFullYear(), 0, 1);\n                }\n            }\n\n            if (newDate) {\n                _this.silent = true;\n                _this.date = newDate;\n                _this.silent = false;\n                _this.nav._render()\n            }\n\n            if (opts.multipleDates && !opts.range) { // Set priority to range functionality\n                if (len === opts.multipleDates) return;\n                if (!_this._isSelected(date)) {\n                    _this.selectedDates.push(date);\n                }\n            } else if (opts.range) {\n                if (len == 2) {\n                    _this.selectedDates = [date];\n                    _this.minRange = date;\n                    _this.maxRange = '';\n                } else if (len == 1) {\n                    _this.selectedDates.push(date);\n                    if (!_this.maxRange){\n                        _this.maxRange = date;\n                    } else {\n                        _this.minRange = date;\n                    }\n                    // Swap dates if they were selected via dp.selectDate() and second date was smaller then first\n                    if (datepicker.bigger(_this.maxRange, _this.minRange)) {\n                        _this.maxRange = _this.minRange;\n                        _this.minRange = date;\n                    }\n                    _this.selectedDates = [_this.minRange, _this.maxRange]\n\n                } else {\n                    _this.selectedDates = [date];\n                    _this.minRange = date;\n                }\n            } else {\n                _this.selectedDates = [date];\n            }\n\n            _this._setInputValue();\n\n            if (opts.onSelect) {\n                _this._triggerOnChange();\n            }\n\n            if (opts.autoClose && !this.timepickerIsActive) {\n                if (!opts.multipleDates && !opts.range) {\n                    _this.hide();\n                } else if (opts.range && _this.selectedDates.length == 2) {\n                    _this.hide();\n                }\n            }\n\n            _this.views[this.currentView]._render()\n        },\n\n        removeDate: function (date) {\n            var selected = this.selectedDates,\n                _this = this;\n\n            if (!(date instanceof Date)) return;\n\n            return selected.some(function (curDate, i) {\n                if (datepicker.isSame(curDate, date)) {\n                    selected.splice(i, 1);\n\n                    if (!_this.selectedDates.length) {\n                        _this.minRange = '';\n                        _this.maxRange = '';\n                        _this.lastSelectedDate = '';\n                    } else {\n                        _this.lastSelectedDate = _this.selectedDates[_this.selectedDates.length - 1];\n                    }\n\n                    _this.views[_this.currentView]._render();\n                    _this._setInputValue();\n\n                    if (_this.opts.onSelect) {\n                        _this._triggerOnChange();\n                    }\n\n                    return true\n                }\n            })\n        },\n\n        today: function () {\n            this.silent = true;\n            this.view = this.opts.minView;\n            this.silent = false;\n            this.date = new Date();\n\n            if (this.opts.todayButton instanceof Date) {\n                this.selectDate(this.opts.todayButton)\n            }\n        },\n\n        clear: function () {\n            this.selectedDates = [];\n            this.minRange = '';\n            this.maxRange = '';\n            this.views[this.currentView]._render();\n            this._setInputValue();\n            if (this.opts.onSelect) {\n                this._triggerOnChange()\n            }\n        },\n\n        /**\n         * Updates datepicker options\n         * @param {String|Object} param - parameter's name to update. If object then it will extend current options\n         * @param {String|Number|Object} [value] - new param value\n         */\n        update: function (param, value) {\n            var len = arguments.length,\n                lastSelectedDate = this.lastSelectedDate;\n\n            if (len == 2) {\n                this.opts[param] = value;\n            } else if (len == 1 && typeof param == 'object') {\n                this.opts = $.extend(true, this.opts, param)\n            }\n\n            this._createShortCuts();\n            this._syncWithMinMaxDates();\n            this._defineLocale(this.opts.language);\n            this.nav._addButtonsIfNeed();\n            if (!this.opts.onlyTimepicker) this.nav._render();\n            this.views[this.currentView]._render();\n\n            if (this.elIsInput && !this.opts.inline) {\n                this._setPositionClasses(this.opts.position);\n                if (this.visible) {\n                    this.setPosition(this.opts.position)\n                }\n            }\n\n            if (this.opts.classes) {\n                this.$datepicker.addClass(this.opts.classes)\n            }\n\n            if (this.opts.onlyTimepicker) {\n                this.$datepicker.addClass('-only-timepicker-');\n            }\n\n            if (this.opts.timepicker) {\n                if (lastSelectedDate) this.timepicker._handleDate(lastSelectedDate);\n                this.timepicker._updateRanges();\n                this.timepicker._updateCurrentTime();\n                // Change hours and minutes if it's values have been changed through min/max hours/minutes\n                if (lastSelectedDate) {\n                    lastSelectedDate.setHours(this.timepicker.hours);\n                    lastSelectedDate.setMinutes(this.timepicker.minutes);\n                }\n            }\n\n            this._setInputValue();\n\n            return this;\n        },\n\n        _syncWithMinMaxDates: function () {\n            var curTime = this.date.getTime();\n            this.silent = true;\n            if (this.minTime > curTime) {\n                this.date = this.minDate;\n            }\n\n            if (this.maxTime < curTime) {\n                this.date = this.maxDate;\n            }\n            this.silent = false;\n        },\n\n        _isSelected: function (checkDate, cellType) {\n            var res = false;\n            this.selectedDates.some(function (date) {\n                if (datepicker.isSame(date, checkDate, cellType)) {\n                    res = date;\n                    return true;\n                }\n            });\n            return res;\n        },\n\n        _setInputValue: function () {\n            var _this = this,\n                opts = _this.opts,\n                format = _this.loc.dateFormat,\n                altFormat = opts.altFieldDateFormat,\n                value = _this.selectedDates.map(function (date) {\n                    return _this.formatDate(format, date)\n                }),\n                altValues;\n\n            if (opts.altField && _this.$altField.length) {\n                altValues = this.selectedDates.map(function (date) {\n                    return _this.formatDate(altFormat, date)\n                });\n                altValues = altValues.join(this.opts.multipleDatesSeparator);\n                this.$altField.val(altValues);\n            }\n\n            value = value.join(this.opts.multipleDatesSeparator);\n\n            this.$el.val(value)\n        },\n\n        /**\n         * Check if date is between minDate and maxDate\n         * @param date {object} - date object\n         * @param type {string} - cell type\n         * @returns {boolean}\n         * @private\n         */\n        _isInRange: function (date, type) {\n            var time = date.getTime(),\n                d = datepicker.getParsedDate(date),\n                min = datepicker.getParsedDate(this.minDate),\n                max = datepicker.getParsedDate(this.maxDate),\n                dMinTime = new Date(d.year, d.month, min.date).getTime(),\n                dMaxTime = new Date(d.year, d.month, max.date).getTime(),\n                types = {\n                    day: time >= this.minTime && time <= this.maxTime,\n                    month: dMinTime >= this.minTime && dMaxTime <= this.maxTime,\n                    year: d.year >= min.year && d.year <= max.year\n                };\n            return type ? types[type] : types.day\n        },\n\n        _getDimensions: function ($el) {\n            var offset = $el.offset();\n\n            return {\n                width: $el.outerWidth(),\n                height: $el.outerHeight(),\n                left: offset.left,\n                top: offset.top\n            }\n        },\n\n        _getDateFromCell: function (cell) {\n            var curDate = this.parsedDate,\n                year = cell.data('year') || curDate.year,\n                month = cell.data('month') == undefined ? curDate.month : cell.data('month'),\n                date = cell.data('date') || 1;\n\n            return new Date(year, month, date);\n        },\n\n        _setPositionClasses: function (pos) {\n            pos = pos.split(' ');\n            var main = pos[0],\n                sec = pos[1],\n                classes = 'datepicker -' + main + '-' + sec + '- -from-' + main + '-';\n\n            if (this.visible) classes += ' active';\n\n            this.$datepicker\n                .removeAttr('class')\n                .addClass(classes);\n        },\n\n        setPosition: function (position) {\n            position = position || this.opts.position;\n\n            var dims = this._getDimensions(this.$el),\n                selfDims = this._getDimensions(this.$datepicker),\n                pos = position.split(' '),\n                top, left,\n                offset = this.opts.offset,\n                main = pos[0],\n                secondary = pos[1];\n\n            switch (main) {\n                case 'top':\n                    top = dims.top - selfDims.height - offset;\n                    break;\n                case 'right':\n                    left = dims.left + dims.width + offset;\n                    break;\n                case 'bottom':\n                    top = dims.top + dims.height + offset;\n                    break;\n                case 'left':\n                    left = dims.left - selfDims.width - offset;\n                    break;\n            }\n\n            switch(secondary) {\n                case 'top':\n                    top = dims.top;\n                    break;\n                case 'right':\n                    left = dims.left + dims.width - selfDims.width;\n                    break;\n                case 'bottom':\n                    top = dims.top + dims.height - selfDims.height;\n                    break;\n                case 'left':\n                    left = dims.left;\n                    break;\n                case 'center':\n                    if (/left|right/.test(main)) {\n                        top = dims.top + dims.height/2 - selfDims.height/2;\n                    } else {\n                        left = dims.left + dims.width/2 - selfDims.width/2;\n                    }\n            }\n\n            this.$datepicker\n                .css({\n                    left: left,\n                    top: top\n                })\n        },\n\n        show: function () {\n            var onShow = this.opts.onShow;\n\n            this.setPosition(this.opts.position);\n            this.$datepicker.addClass('active');\n            this.visible = true;\n\n            if (onShow) {\n                this._bindVisionEvents(onShow)\n            }\n        },\n\n        hide: function () {\n            var onHide = this.opts.onHide;\n\n            this.$datepicker\n                .removeClass('active')\n                .css({\n                    left: '-100000px'\n                });\n\n            this.focused = '';\n            this.keys = [];\n\n            this.inFocus = false;\n            this.visible = false;\n            this.$el.blur();\n\n            if (onHide) {\n                this._bindVisionEvents(onHide)\n            }\n        },\n\n        down: function (date) {\n            this._changeView(date, 'down');\n        },\n\n        up: function (date) {\n            this._changeView(date, 'up');\n        },\n\n        _bindVisionEvents: function (event) {\n            this.$datepicker.off('transitionend.dp');\n            event(this, false);\n            this.$datepicker.one('transitionend.dp', event.bind(this, this, true))\n        },\n\n        _changeView: function (date, dir) {\n            date = date || this.focused || this.date;\n\n            var nextView = dir == 'up' ? this.viewIndex + 1 : this.viewIndex - 1;\n            if (nextView > 2) nextView = 2;\n            if (nextView < 0) nextView = 0;\n\n            this.silent = true;\n            this.date = new Date(date.getFullYear(), date.getMonth(), 1);\n            this.silent = false;\n            this.view = this.viewIndexes[nextView];\n\n        },\n\n        _handleHotKey: function (key) {\n            var date = datepicker.getParsedDate(this._getFocusedDate()),\n                focusedParsed,\n                o = this.opts,\n                newDate,\n                totalDaysInNextMonth,\n                monthChanged = false,\n                yearChanged = false,\n                decadeChanged = false,\n                y = date.year,\n                m = date.month,\n                d = date.date;\n\n            switch (key) {\n                case 'ctrlRight':\n                case 'ctrlUp':\n                    m += 1;\n                    monthChanged = true;\n                    break;\n                case 'ctrlLeft':\n                case 'ctrlDown':\n                    m -= 1;\n                    monthChanged = true;\n                    break;\n                case 'shiftRight':\n                case 'shiftUp':\n                    yearChanged = true;\n                    y += 1;\n                    break;\n                case 'shiftLeft':\n                case 'shiftDown':\n                    yearChanged = true;\n                    y -= 1;\n                    break;\n                case 'altRight':\n                case 'altUp':\n                    decadeChanged = true;\n                    y += 10;\n                    break;\n                case 'altLeft':\n                case 'altDown':\n                    decadeChanged = true;\n                    y -= 10;\n                    break;\n                case 'ctrlShiftUp':\n                    this.up();\n                    break;\n            }\n\n            totalDaysInNextMonth = datepicker.getDaysCount(new Date(y,m));\n            newDate = new Date(y,m,d);\n\n            // If next month has less days than current, set date to total days in that month\n            if (totalDaysInNextMonth < d) d = totalDaysInNextMonth;\n\n            // Check if newDate is in valid range\n            if (newDate.getTime() < this.minTime) {\n                newDate = this.minDate;\n            } else if (newDate.getTime() > this.maxTime) {\n                newDate = this.maxDate;\n            }\n\n            this.focused = newDate;\n\n            focusedParsed = datepicker.getParsedDate(newDate);\n            if (monthChanged && o.onChangeMonth) {\n                o.onChangeMonth(focusedParsed.month, focusedParsed.year)\n            }\n            if (yearChanged && o.onChangeYear) {\n                o.onChangeYear(focusedParsed.year)\n            }\n            if (decadeChanged && o.onChangeDecade) {\n                o.onChangeDecade(this.curDecade)\n            }\n        },\n\n        _registerKey: function (key) {\n            var exists = this.keys.some(function (curKey) {\n                return curKey == key;\n            });\n\n            if (!exists) {\n                this.keys.push(key)\n            }\n        },\n\n        _unRegisterKey: function (key) {\n            var index = this.keys.indexOf(key);\n\n            this.keys.splice(index, 1);\n        },\n\n        _isHotKeyPressed: function () {\n            var currentHotKey,\n                found = false,\n                _this = this,\n                pressedKeys = this.keys.sort();\n\n            for (var hotKey in hotKeys) {\n                currentHotKey = hotKeys[hotKey];\n                if (pressedKeys.length != currentHotKey.length) continue;\n\n                if (currentHotKey.every(function (key, i) { return key == pressedKeys[i]})) {\n                    _this._trigger('hotKey', hotKey);\n                    found = true;\n                }\n            }\n\n            return found;\n        },\n\n        _trigger: function (event, args) {\n            this.$el.trigger(event, args)\n        },\n\n        _focusNextCell: function (keyCode, type) {\n            type = type || this.cellType;\n\n            var date = datepicker.getParsedDate(this._getFocusedDate()),\n                y = date.year,\n                m = date.month,\n                d = date.date;\n\n            if (this._isHotKeyPressed()){\n                return;\n            }\n\n            switch(keyCode) {\n                case 37: // left\n                    type == 'day' ? (d -= 1) : '';\n                    type == 'month' ? (m -= 1) : '';\n                    type == 'year' ? (y -= 1) : '';\n                    break;\n                case 38: // up\n                    type == 'day' ? (d -= 7) : '';\n                    type == 'month' ? (m -= 3) : '';\n                    type == 'year' ? (y -= 4) : '';\n                    break;\n                case 39: // right\n                    type == 'day' ? (d += 1) : '';\n                    type == 'month' ? (m += 1) : '';\n                    type == 'year' ? (y += 1) : '';\n                    break;\n                case 40: // down\n                    type == 'day' ? (d += 7) : '';\n                    type == 'month' ? (m += 3) : '';\n                    type == 'year' ? (y += 4) : '';\n                    break;\n            }\n\n            var nd = new Date(y,m,d);\n            if (nd.getTime() < this.minTime) {\n                nd = this.minDate;\n            } else if (nd.getTime() > this.maxTime) {\n                nd = this.maxDate;\n            }\n\n            this.focused = nd;\n\n        },\n\n        _getFocusedDate: function () {\n            var focused  = this.focused || this.selectedDates[this.selectedDates.length - 1],\n                d = this.parsedDate;\n\n            if (!focused) {\n                switch (this.view) {\n                    case 'days':\n                        focused = new Date(d.year, d.month, new Date().getDate());\n                        break;\n                    case 'months':\n                        focused = new Date(d.year, d.month, 1);\n                        break;\n                    case 'years':\n                        focused = new Date(d.year, 0, 1);\n                        break;\n                }\n            }\n\n            return focused;\n        },\n\n        _getCell: function (date, type) {\n            type = type || this.cellType;\n\n            var d = datepicker.getParsedDate(date),\n                selector = '.datepicker--cell[data-year=\"' + d.year + '\"]',\n                $cell;\n\n            switch (type) {\n                case 'month':\n                    selector = '[data-month=\"' + d.month + '\"]';\n                    break;\n                case 'day':\n                    selector += '[data-month=\"' + d.month + '\"][data-date=\"' + d.date + '\"]';\n                    break;\n            }\n            $cell = this.views[this.currentView].$el.find(selector);\n\n            return $cell.length ? $cell : $('');\n        },\n\n        destroy: function () {\n            var _this = this;\n            _this.$el\n                .off('.adp')\n                .data('datepicker', '');\n\n            _this.selectedDates = [];\n            _this.focused = '';\n            _this.views = {};\n            _this.keys = [];\n            _this.minRange = '';\n            _this.maxRange = '';\n\n            if (_this.opts.inline || !_this.elIsInput) {\n                _this.$datepicker.closest('.datepicker-inline').remove();\n            } else {\n                _this.$datepicker.remove();\n            }\n        },\n\n        _handleAlreadySelectedDates: function (alreadySelected, selectedDate) {\n            if (this.opts.range) {\n                if (!this.opts.toggleSelected) {\n                    // Add possibility to select same date when range is true\n                    if (this.selectedDates.length != 2) {\n                        this._trigger('clickCell', selectedDate);\n                    }\n                } else {\n                    this.removeDate(selectedDate);\n                }\n            } else if (this.opts.toggleSelected){\n                this.removeDate(selectedDate);\n            }\n\n            // Change last selected date to be able to change time when clicking on this cell\n            if (!this.opts.toggleSelected) {\n                this.lastSelectedDate = alreadySelected;\n                if (this.opts.timepicker) {\n                    this.timepicker._setTime(alreadySelected);\n                    this.timepicker.update();\n                }\n            }\n        },\n\n        _onShowEvent: function (e) {\n            if (!this.visible) {\n                this.show();\n            }\n        },\n\n        _onBlur: function () {\n            if (!this.inFocus && this.visible) {\n                this.hide();\n            }\n        },\n\n        _onMouseDownDatepicker: function (e) {\n            this.inFocus = true;\n        },\n\n        _onMouseUpDatepicker: function (e) {\n            this.inFocus = false;\n            e.originalEvent.inFocus = true;\n            if (!e.originalEvent.timepickerFocus) this.$el.focus();\n        },\n\n        _onKeyUpGeneral: function (e) {\n            var val = this.$el.val();\n\n            if (!val) {\n                this.clear();\n            }\n        },\n\n        _onResize: function () {\n            if (this.visible) {\n                this.setPosition();\n            }\n        },\n\n        _onMouseUpBody: function (e) {\n            if (e.originalEvent.inFocus) return;\n\n            if (this.visible && !this.inFocus) {\n                this.hide();\n            }\n        },\n\n        _onMouseUpEl: function (e) {\n            e.originalEvent.inFocus = true;\n            setTimeout(this._onKeyUpGeneral.bind(this),4);\n        },\n\n        _onKeyDown: function (e) {\n            var code = e.which;\n            this._registerKey(code);\n\n            // Arrows\n            if (code >= 37 && code <= 40) {\n                e.preventDefault();\n                this._focusNextCell(code);\n            }\n\n            // Enter\n            if (code == 13) {\n                if (this.focused) {\n                    if (this._getCell(this.focused).hasClass('-disabled-')) return;\n                    if (this.view != this.opts.minView) {\n                        this.down()\n                    } else {\n                        var alreadySelected = this._isSelected(this.focused, this.cellType);\n\n                        if (!alreadySelected) {\n                            if (this.timepicker) {\n                                this.focused.setHours(this.timepicker.hours);\n                                this.focused.setMinutes(this.timepicker.minutes);\n                            }\n                            this.selectDate(this.focused);\n                            return;\n                        }\n                        this._handleAlreadySelectedDates(alreadySelected, this.focused)\n                    }\n                }\n            }\n\n            // Esc\n            if (code == 27) {\n                this.hide();\n            }\n        },\n\n        _onKeyUp: function (e) {\n            var code = e.which;\n            this._unRegisterKey(code);\n        },\n\n        _onHotKey: function (e, hotKey) {\n            this._handleHotKey(hotKey);\n        },\n\n        _onMouseEnterCell: function (e) {\n            var $cell = $(e.target).closest('.datepicker--cell'),\n                date = this._getDateFromCell($cell);\n\n            // Prevent from unnecessary rendering and setting new currentDate\n            this.silent = true;\n\n            if (this.focused) {\n                this.focused = ''\n            }\n\n            $cell.addClass('-focus-');\n\n            this.focused = date;\n            this.silent = false;\n\n            if (this.opts.range && this.selectedDates.length == 1) {\n                this.minRange = this.selectedDates[0];\n                this.maxRange = '';\n                if (datepicker.less(this.minRange, this.focused)) {\n                    this.maxRange = this.minRange;\n                    this.minRange = '';\n                }\n                this.views[this.currentView]._update();\n            }\n        },\n\n        _onMouseLeaveCell: function (e) {\n            var $cell = $(e.target).closest('.datepicker--cell');\n\n            $cell.removeClass('-focus-');\n\n            this.silent = true;\n            this.focused = '';\n            this.silent = false;\n        },\n\n        _onTimeChange: function (e, h, m) {\n            var date = new Date(),\n                selectedDates = this.selectedDates,\n                selected = false;\n\n            if (selectedDates.length) {\n                selected = true;\n                date = this.lastSelectedDate;\n            }\n\n            date.setHours(h);\n            date.setMinutes(m);\n\n            if (!selected && !this._getCell(date).hasClass('-disabled-')) {\n                this.selectDate(date);\n            } else {\n                this._setInputValue();\n                if (this.opts.onSelect) {\n                    this._triggerOnChange();\n                }\n            }\n        },\n\n        _onClickCell: function (e, date) {\n            if (this.timepicker) {\n                date.setHours(this.timepicker.hours);\n                date.setMinutes(this.timepicker.minutes);\n            }\n            this.selectDate(date);\n        },\n\n        set focused(val) {\n            if (!val && this.focused) {\n                var $cell = this._getCell(this.focused);\n\n                if ($cell.length) {\n                    $cell.removeClass('-focus-')\n                }\n            }\n            this._focused = val;\n            if (this.opts.range && this.selectedDates.length == 1) {\n                this.minRange = this.selectedDates[0];\n                this.maxRange = '';\n                if (datepicker.less(this.minRange, this._focused)) {\n                    this.maxRange = this.minRange;\n                    this.minRange = '';\n                }\n            }\n            if (this.silent) return;\n            this.date = val;\n        },\n\n        get focused() {\n            return this._focused;\n        },\n\n        get parsedDate() {\n            return datepicker.getParsedDate(this.date);\n        },\n\n        set date (val) {\n            if (!(val instanceof Date)) return;\n\n            this.currentDate = val;\n\n            if (this.inited && !this.silent) {\n                this.views[this.view]._render();\n                this.nav._render();\n                if (this.visible && this.elIsInput) {\n                    this.setPosition();\n                }\n            }\n            return val;\n        },\n\n        get date () {\n            return this.currentDate\n        },\n\n        set view (val) {\n            this.viewIndex = this.viewIndexes.indexOf(val);\n\n            if (this.viewIndex < 0) {\n                return;\n            }\n\n            this.prevView = this.currentView;\n            this.currentView = val;\n\n            if (this.inited) {\n                if (!this.views[val]) {\n                    this.views[val] = new  $.fn.datepicker.Body(this, val, this.opts)\n                } else {\n                    this.views[val]._render();\n                }\n\n                this.views[this.prevView].hide();\n                this.views[val].show();\n                this.nav._render();\n\n                if (this.opts.onChangeView) {\n                    this.opts.onChangeView(val)\n                }\n                if (this.elIsInput && this.visible) this.setPosition();\n            }\n\n            return val\n        },\n\n        get view() {\n            return this.currentView;\n        },\n\n        get cellType() {\n            return this.view.substring(0, this.view.length - 1)\n        },\n\n        get minTime() {\n            var min = datepicker.getParsedDate(this.minDate);\n            return new Date(min.year, min.month, min.date).getTime()\n        },\n\n        get maxTime() {\n            var max = datepicker.getParsedDate(this.maxDate);\n            return new Date(max.year, max.month, max.date).getTime()\n        },\n\n        get curDecade() {\n            return datepicker.getDecade(this.date)\n        }\n    };\n\n    //  Utils\n    // -------------------------------------------------\n\n    datepicker.getDaysCount = function (date) {\n        return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n    };\n\n    datepicker.getParsedDate = function (date) {\n        return {\n            year: date.getFullYear(),\n            month: date.getMonth(),\n            fullMonth: (date.getMonth() + 1) < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1, // One based\n            date: date.getDate(),\n            fullDate: date.getDate() < 10 ? '0' + date.getDate() : date.getDate(),\n            day: date.getDay(),\n            hours: date.getHours(),\n            fullHours:  date.getHours() < 10 ? '0' + date.getHours() :  date.getHours() ,\n            minutes: date.getMinutes(),\n            fullMinutes:  date.getMinutes() < 10 ? '0' + date.getMinutes() :  date.getMinutes()\n        }\n    };\n\n    datepicker.getDecade = function (date) {\n        var firstYear = Math.floor(date.getFullYear() / 10) * 10;\n\n        return [firstYear, firstYear + 9];\n    };\n\n    datepicker.template = function (str, data) {\n        return str.replace(/#\\{([\\w]+)\\}/g, function (source, match) {\n            if (data[match] || data[match] === 0) {\n                return data[match]\n            }\n        });\n    };\n\n    datepicker.isSame = function (date1, date2, type) {\n        if (!date1 || !date2) return false;\n        var d1 = datepicker.getParsedDate(date1),\n            d2 = datepicker.getParsedDate(date2),\n            _type = type ? type : 'day',\n\n            conditions = {\n                day: d1.date == d2.date && d1.month == d2.month && d1.year == d2.year,\n                month: d1.month == d2.month && d1.year == d2.year,\n                year: d1.year == d2.year\n            };\n\n        return conditions[_type];\n    };\n\n    datepicker.less = function (dateCompareTo, date, type) {\n        if (!dateCompareTo || !date) return false;\n        return date.getTime() < dateCompareTo.getTime();\n    };\n\n    datepicker.bigger = function (dateCompareTo, date, type) {\n        if (!dateCompareTo || !date) return false;\n        return date.getTime() > dateCompareTo.getTime();\n    };\n\n    datepicker.getLeadingZeroNum = function (num) {\n        return parseInt(num) < 10 ? '0' + num : num;\n    };\n\n    /**\n     * Returns copy of date with hours and minutes equals to 0\n     * @param date {Date}\n     */\n    datepicker.resetTime = function (date) {\n        if (typeof date != 'object') return;\n        date = datepicker.getParsedDate(date);\n        return new Date(date.year, date.month, date.date)\n    };\n\n    $.fn.datepicker = function ( options ) {\n        return this.each(function () {\n            if (!$.data(this, pluginName)) {\n                $.data(this,  pluginName,\n                    new Datepicker( this, options ));\n            } else {\n                var _this = $.data(this, pluginName);\n\n                _this.opts = $.extend(true, _this.opts, options);\n                _this.update();\n            }\n        });\n    };\n\n    $.fn.datepicker.Constructor = Datepicker;\n\n    $.fn.datepicker.language = {\n        ru: {\n            days: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],\n            daysShort: ['Вос','Пон','Вто','Сре','Чет','Пят','Суб'],\n            daysMin: ['Вс','Пн','Вт','Ср','Чт','Пт','Сб'],\n            months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n            monthsShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\n            today: 'Сегодня',\n            clear: 'Очистить',\n            dateFormat: 'dd.mm.yyyy',\n            timeFormat: 'hh:ii',\n            firstDay: 1\n        }\n    };\n\n    $(function () {\n        $(autoInitSelector).datepicker();\n    })\n\n})();\n\n;(function () {\n    var templates = {\n        days:'' +\n        '<div class=\"datepicker--days datepicker--body\">' +\n        '<div class=\"datepicker--days-names\"></div>' +\n        '<div class=\"datepicker--cells datepicker--cells-days\"></div>' +\n        '</div>',\n        months: '' +\n        '<div class=\"datepicker--months datepicker--body\">' +\n        '<div class=\"datepicker--cells datepicker--cells-months\"></div>' +\n        '</div>',\n        years: '' +\n        '<div class=\"datepicker--years datepicker--body\">' +\n        '<div class=\"datepicker--cells datepicker--cells-years\"></div>' +\n        '</div>'\n        },\n        datepicker = $.fn.datepicker,\n        dp = datepicker.Constructor;\n\n    datepicker.Body = function (d, type, opts) {\n        this.d = d;\n        this.type = type;\n        this.opts = opts;\n        this.$el = $('');\n\n        if (this.opts.onlyTimepicker) return;\n        this.init();\n    };\n\n    datepicker.Body.prototype = {\n        init: function () {\n            this._buildBaseHtml();\n            this._render();\n\n            this._bindEvents();\n        },\n\n        _bindEvents: function () {\n            this.$el.on('click', '.datepicker--cell', $.proxy(this._onClickCell, this));\n        },\n\n        _buildBaseHtml: function () {\n            this.$el = $(templates[this.type]).appendTo(this.d.$content);\n            this.$names = $('.datepicker--days-names', this.$el);\n            this.$cells = $('.datepicker--cells', this.$el);\n        },\n\n        _getDayNamesHtml: function (firstDay, curDay, html, i) {\n            curDay = curDay != undefined ? curDay : firstDay;\n            html = html ? html : '';\n            i = i != undefined ? i : 0;\n\n            if (i > 7) return html;\n            if (curDay == 7) return this._getDayNamesHtml(firstDay, 0, html, ++i);\n\n            html += '<div class=\"datepicker--day-name' + (this.d.isWeekend(curDay) ? \" -weekend-\" : \"\") + '\">' + this.d.loc.daysMin[curDay] + '</div>';\n\n            return this._getDayNamesHtml(firstDay, ++curDay, html, ++i);\n        },\n\n        _getCellContents: function (date, type) {\n            var classes = \"datepicker--cell datepicker--cell-\" + type,\n                currentDate = new Date(),\n                parent = this.d,\n                minRange = dp.resetTime(parent.minRange),\n                maxRange = dp.resetTime(parent.maxRange),\n                opts = parent.opts,\n                d = dp.getParsedDate(date),\n                render = {},\n                html = d.date;\n\n            switch (type) {\n                case 'day':\n                    if (parent.isWeekend(d.day)) classes += \" -weekend-\";\n                    if (d.month != this.d.parsedDate.month) {\n                        classes += \" -other-month-\";\n                        if (!opts.selectOtherMonths) {\n                            classes += \" -disabled-\";\n                        }\n                        if (!opts.showOtherMonths) html = '';\n                    }\n                    break;\n                case 'month':\n                    html = parent.loc[parent.opts.monthsField][d.month];\n                    break;\n                case 'year':\n                    var decade = parent.curDecade;\n                    html = d.year;\n                    if (d.year < decade[0] || d.year > decade[1]) {\n                        classes += ' -other-decade-';\n                        if (!opts.selectOtherYears) {\n                            classes += \" -disabled-\";\n                        }\n                        if (!opts.showOtherYears) html = '';\n                    }\n                    break;\n            }\n\n            if (opts.onRenderCell) {\n                render = opts.onRenderCell(date, type) || {};\n                html = render.html ? render.html : html;\n                classes += render.classes ? ' ' + render.classes : '';\n            }\n\n            if (opts.range) {\n                if (dp.isSame(minRange, date, type)) classes += ' -range-from-';\n                if (dp.isSame(maxRange, date, type)) classes += ' -range-to-';\n\n                if (parent.selectedDates.length == 1 && parent.focused) {\n                    if (\n                        (dp.bigger(minRange, date) && dp.less(parent.focused, date)) ||\n                        (dp.less(maxRange, date) && dp.bigger(parent.focused, date)))\n                    {\n                        classes += ' -in-range-'\n                    }\n\n                    if (dp.less(maxRange, date) && dp.isSame(parent.focused, date)) {\n                        classes += ' -range-from-'\n                    }\n                    if (dp.bigger(minRange, date) && dp.isSame(parent.focused, date)) {\n                        classes += ' -range-to-'\n                    }\n\n                } else if (parent.selectedDates.length == 2) {\n                    if (dp.bigger(minRange, date) && dp.less(maxRange, date)) {\n                        classes += ' -in-range-'\n                    }\n                }\n            }\n\n\n            if (dp.isSame(currentDate, date, type)) classes += ' -current-';\n            if (parent.focused && dp.isSame(date, parent.focused, type)) classes += ' -focus-';\n            if (parent._isSelected(date, type)) classes += ' -selected-';\n            if (!parent._isInRange(date, type) || render.disabled) classes += ' -disabled-';\n\n            return {\n                html: html,\n                classes: classes\n            }\n        },\n\n        /**\n         * Calculates days number to render. Generates days html and returns it.\n         * @param {object} date - Date object\n         * @returns {string}\n         * @private\n         */\n        _getDaysHtml: function (date) {\n            var totalMonthDays = dp.getDaysCount(date),\n                firstMonthDay = new Date(date.getFullYear(), date.getMonth(), 1).getDay(),\n                lastMonthDay = new Date(date.getFullYear(), date.getMonth(), totalMonthDays).getDay(),\n                daysFromPevMonth = firstMonthDay - this.d.loc.firstDay,\n                daysFromNextMonth = 6 - lastMonthDay + this.d.loc.firstDay;\n\n            daysFromPevMonth = daysFromPevMonth < 0 ? daysFromPevMonth + 7 : daysFromPevMonth;\n            daysFromNextMonth = daysFromNextMonth > 6 ? daysFromNextMonth - 7 : daysFromNextMonth;\n\n            var startDayIndex = -daysFromPevMonth + 1,\n                m, y,\n                html = '';\n\n            for (var i = startDayIndex, max = totalMonthDays + daysFromNextMonth; i <= max; i++) {\n                y = date.getFullYear();\n                m = date.getMonth();\n\n                html += this._getDayHtml(new Date(y, m, i))\n            }\n\n            return html;\n        },\n\n        _getDayHtml: function (date) {\n           var content = this._getCellContents(date, 'day');\n\n            return '<div class=\"' + content.classes + '\" ' +\n                'data-date=\"' + date.getDate() + '\" ' +\n                'data-month=\"' + date.getMonth() + '\" ' +\n                'data-year=\"' + date.getFullYear() + '\">' + content.html + '</div>';\n        },\n\n        /**\n         * Generates months html\n         * @param {object} date - date instance\n         * @returns {string}\n         * @private\n         */\n        _getMonthsHtml: function (date) {\n            var html = '',\n                d = dp.getParsedDate(date),\n                i = 0;\n\n            while(i < 12) {\n                html += this._getMonthHtml(new Date(d.year, i));\n                i++\n            }\n\n            return html;\n        },\n\n        _getMonthHtml: function (date) {\n            var content = this._getCellContents(date, 'month');\n\n            return '<div class=\"' + content.classes + '\" data-month=\"' + date.getMonth() + '\">' + content.html + '</div>'\n        },\n\n        _getYearsHtml: function (date) {\n            var d = dp.getParsedDate(date),\n                decade = dp.getDecade(date),\n                firstYear = decade[0] - 1,\n                html = '',\n                i = firstYear;\n\n            for (i; i <= decade[1] + 1; i++) {\n                html += this._getYearHtml(new Date(i , 0));\n            }\n\n            return html;\n        },\n\n        _getYearHtml: function (date) {\n            var content = this._getCellContents(date, 'year');\n\n            return '<div class=\"' + content.classes + '\" data-year=\"' + date.getFullYear() + '\">' + content.html + '</div>'\n        },\n\n        _renderTypes: {\n            days: function () {\n                var dayNames = this._getDayNamesHtml(this.d.loc.firstDay),\n                    days = this._getDaysHtml(this.d.currentDate);\n\n                this.$cells.html(days);\n                this.$names.html(dayNames)\n            },\n            months: function () {\n                var html = this._getMonthsHtml(this.d.currentDate);\n\n                this.$cells.html(html)\n            },\n            years: function () {\n                var html = this._getYearsHtml(this.d.currentDate);\n\n                this.$cells.html(html)\n            }\n        },\n\n        _render: function () {\n            if (this.opts.onlyTimepicker) return;\n            this._renderTypes[this.type].bind(this)();\n        },\n\n        _update: function () {\n            var $cells = $('.datepicker--cell', this.$cells),\n                _this = this,\n                classes,\n                $cell,\n                date;\n            $cells.each(function (cell, i) {\n                $cell = $(this);\n                date = _this.d._getDateFromCell($(this));\n                classes = _this._getCellContents(date, _this.d.cellType);\n                $cell.attr('class',classes.classes)\n            });\n        },\n\n        show: function () {\n            if (this.opts.onlyTimepicker) return;\n            this.$el.addClass('active');\n            this.acitve = true;\n        },\n\n        hide: function () {\n            this.$el.removeClass('active');\n            this.active = false;\n        },\n\n        //  Events\n        // -------------------------------------------------\n\n        _handleClick: function (el) {\n            var date = el.data('date') || 1,\n                month = el.data('month') || 0,\n                year = el.data('year') || this.d.parsedDate.year,\n                dp = this.d;\n            // Change view if min view does not reach yet\n            if (dp.view != this.opts.minView) {\n                dp.down(new Date(year, month, date));\n                return;\n            }\n            // Select date if min view is reached\n            var selectedDate = new Date(year, month, date),\n                alreadySelected = this.d._isSelected(selectedDate, this.d.cellType);\n\n            if (!alreadySelected) {\n                dp._trigger('clickCell', selectedDate);\n                return;\n            }\n\n            dp._handleAlreadySelectedDates.bind(dp, alreadySelected, selectedDate)();\n\n        },\n\n        _onClickCell: function (e) {\n            var $el = $(e.target).closest('.datepicker--cell');\n\n            if ($el.hasClass('-disabled-')) return;\n\n            this._handleClick.bind(this)($el);\n        }\n    };\n})();\n\n;(function () {\n    var template = '' +\n        '<div class=\"datepicker--nav-action\" data-action=\"prev\">#{prevHtml}</div>' +\n        '<div class=\"datepicker--nav-title\">#{title}</div>' +\n        '<div class=\"datepicker--nav-action\" data-action=\"next\">#{nextHtml}</div>',\n        buttonsContainerTemplate = '<div class=\"datepicker--buttons\"></div>',\n        button = '<span class=\"datepicker--button\" data-action=\"#{action}\">#{label}</span>',\n        datepicker = $.fn.datepicker,\n        dp = datepicker.Constructor;\n\n    datepicker.Navigation = function (d, opts) {\n        this.d = d;\n        this.opts = opts;\n\n        this.$buttonsContainer = '';\n\n        this.init();\n    };\n\n    datepicker.Navigation.prototype = {\n        init: function () {\n            this._buildBaseHtml();\n            this._bindEvents();\n        },\n\n        _bindEvents: function () {\n            this.d.$nav.on('click', '.datepicker--nav-action', $.proxy(this._onClickNavButton, this));\n            this.d.$nav.on('click', '.datepicker--nav-title', $.proxy(this._onClickNavTitle, this));\n            this.d.$datepicker.on('click', '.datepicker--button', $.proxy(this._onClickNavButton, this));\n        },\n\n        _buildBaseHtml: function () {\n            if (!this.opts.onlyTimepicker) {\n                this._render();\n            }\n            this._addButtonsIfNeed();\n        },\n\n        _addButtonsIfNeed: function () {\n            if (this.opts.todayButton) {\n                this._addButton('today')\n            }\n            if (this.opts.clearButton) {\n                this._addButton('clear')\n            }\n        },\n\n        _render: function () {\n            var title = this._getTitle(this.d.currentDate),\n                html = dp.template(template, $.extend({title: title}, this.opts));\n            this.d.$nav.html(html);\n            if (this.d.view == 'years') {\n                $('.datepicker--nav-title', this.d.$nav).addClass('-disabled-');\n            }\n            this.setNavStatus();\n        },\n\n        _getTitle: function (date) {\n            return this.d.formatDate(this.opts.navTitles[this.d.view], date)\n        },\n\n        _addButton: function (type) {\n            if (!this.$buttonsContainer.length) {\n                this._addButtonsContainer();\n            }\n\n            var data = {\n                    action: type,\n                    label: this.d.loc[type]\n                },\n                html = dp.template(button, data);\n\n            if ($('[data-action=' + type + ']', this.$buttonsContainer).length) return;\n            this.$buttonsContainer.append(html);\n        },\n\n        _addButtonsContainer: function () {\n            this.d.$datepicker.append(buttonsContainerTemplate);\n            this.$buttonsContainer = $('.datepicker--buttons', this.d.$datepicker);\n        },\n\n        setNavStatus: function () {\n            if (!(this.opts.minDate || this.opts.maxDate) || !this.opts.disableNavWhenOutOfRange) return;\n\n            var date = this.d.parsedDate,\n                m = date.month,\n                y = date.year,\n                d = date.date;\n\n            switch (this.d.view) {\n                case 'days':\n                    if (!this.d._isInRange(new Date(y, m-1, 1), 'month')) {\n                        this._disableNav('prev')\n                    }\n                    if (!this.d._isInRange(new Date(y, m+1, 1), 'month')) {\n                        this._disableNav('next')\n                    }\n                    break;\n                case 'months':\n                    if (!this.d._isInRange(new Date(y-1, m, d), 'year')) {\n                        this._disableNav('prev')\n                    }\n                    if (!this.d._isInRange(new Date(y+1, m, d), 'year')) {\n                        this._disableNav('next')\n                    }\n                    break;\n                case 'years':\n                    var decade = dp.getDecade(this.d.date);\n                    if (!this.d._isInRange(new Date(decade[0] - 1, 0, 1), 'year')) {\n                        this._disableNav('prev')\n                    }\n                    if (!this.d._isInRange(new Date(decade[1] + 1, 0, 1), 'year')) {\n                        this._disableNav('next')\n                    }\n                    break;\n            }\n        },\n\n        _disableNav: function (nav) {\n            $('[data-action=\"' + nav + '\"]', this.d.$nav).addClass('-disabled-')\n        },\n\n        _activateNav: function (nav) {\n            $('[data-action=\"' + nav + '\"]', this.d.$nav).removeClass('-disabled-')\n        },\n\n        _onClickNavButton: function (e) {\n            var $el = $(e.target).closest('[data-action]'),\n                action = $el.data('action');\n\n            this.d[action]();\n        },\n\n        _onClickNavTitle: function (e) {\n            if ($(e.target).hasClass('-disabled-')) return;\n\n            if (this.d.view == 'days') {\n                return this.d.view = 'months'\n            }\n\n            this.d.view = 'years';\n        }\n    }\n\n})();\n\n;(function () {\n    var template = '<div class=\"datepicker--time\">' +\n        '<div class=\"datepicker--time-current\">' +\n        '   <span class=\"datepicker--time-current-hours\">#{hourVisible}</span>' +\n        '   <span class=\"datepicker--time-current-colon\">:</span>' +\n        '   <span class=\"datepicker--time-current-minutes\">#{minValue}</span>' +\n        '</div>' +\n        '<div class=\"datepicker--time-sliders\">' +\n        '   <div class=\"datepicker--time-row\">' +\n        '      <input type=\"range\" name=\"hours\" value=\"#{hourValue}\" min=\"#{hourMin}\" max=\"#{hourMax}\" step=\"#{hourStep}\"/>' +\n        '   </div>' +\n        '   <div class=\"datepicker--time-row\">' +\n        '      <input type=\"range\" name=\"minutes\" value=\"#{minValue}\" min=\"#{minMin}\" max=\"#{minMax}\" step=\"#{minStep}\"/>' +\n        '   </div>' +\n        '</div>' +\n        '</div>',\n        datepicker = $.fn.datepicker,\n        dp = datepicker.Constructor;\n\n    datepicker.Timepicker = function (inst, opts) {\n        this.d = inst;\n        this.opts = opts;\n\n        this.init();\n    };\n\n    datepicker.Timepicker.prototype = {\n        init: function () {\n            var input = 'input';\n            this._setTime(this.d.date);\n            this._buildHTML();\n\n            if (navigator.userAgent.match(/trident/gi)) {\n                input = 'change';\n            }\n\n            this.d.$el.on('selectDate', this._onSelectDate.bind(this));\n            this.$ranges.on(input, this._onChangeRange.bind(this));\n            this.$ranges.on('mouseup', this._onMouseUpRange.bind(this));\n            this.$ranges.on('mousemove focus ', this._onMouseEnterRange.bind(this));\n            this.$ranges.on('mouseout blur', this._onMouseOutRange.bind(this));\n        },\n\n        _setTime: function (date) {\n            var _date = dp.getParsedDate(date);\n\n            this._handleDate(date);\n            this.hours = _date.hours < this.minHours ? this.minHours : _date.hours;\n            this.minutes = _date.minutes < this.minMinutes ? this.minMinutes : _date.minutes;\n        },\n\n        /**\n         * Sets minHours and minMinutes from date (usually it's a minDate)\n         * Also changes minMinutes if current hours are bigger then @date hours\n         * @param date {Date}\n         * @private\n         */\n        _setMinTimeFromDate: function (date) {\n            this.minHours = date.getHours();\n            this.minMinutes = date.getMinutes();\n\n            // If, for example, min hours are 10, and current hours are 12,\n            // update minMinutes to default value, to be able to choose whole range of values\n            if (this.d.lastSelectedDate) {\n                if (this.d.lastSelectedDate.getHours() > date.getHours()) {\n                    this.minMinutes = this.opts.minMinutes;\n                }\n            }\n        },\n\n        _setMaxTimeFromDate: function (date) {\n            this.maxHours = date.getHours();\n            this.maxMinutes = date.getMinutes();\n\n            if (this.d.lastSelectedDate) {\n                if (this.d.lastSelectedDate.getHours() < date.getHours()) {\n                    this.maxMinutes = this.opts.maxMinutes;\n                }\n            }\n        },\n\n        _setDefaultMinMaxTime: function () {\n            var maxHours = 23,\n                maxMinutes = 59,\n                opts = this.opts;\n\n            this.minHours = opts.minHours < 0 || opts.minHours > maxHours ? 0 : opts.minHours;\n            this.minMinutes = opts.minMinutes < 0 || opts.minMinutes > maxMinutes ? 0 : opts.minMinutes;\n            this.maxHours = opts.maxHours < 0 || opts.maxHours > maxHours ? maxHours : opts.maxHours;\n            this.maxMinutes = opts.maxMinutes < 0 || opts.maxMinutes > maxMinutes ? maxMinutes : opts.maxMinutes;\n        },\n\n        /**\n         * Looks for min/max hours/minutes and if current values\n         * are out of range sets valid values.\n         * @private\n         */\n        _validateHoursMinutes: function (date) {\n            if (this.hours < this.minHours) {\n                this.hours = this.minHours;\n            } else if (this.hours > this.maxHours) {\n                this.hours = this.maxHours;\n            }\n\n            if (this.minutes < this.minMinutes) {\n                this.minutes = this.minMinutes;\n            } else if (this.minutes > this.maxMinutes) {\n                this.minutes = this.maxMinutes;\n            }\n        },\n\n        _buildHTML: function () {\n            var lz = dp.getLeadingZeroNum,\n                data = {\n                    hourMin: this.minHours,\n                    hourMax: lz(this.maxHours),\n                    hourStep: this.opts.hoursStep,\n                    hourValue: this.hours,\n                    hourVisible: lz(this.displayHours),\n                    minMin: this.minMinutes,\n                    minMax: lz(this.maxMinutes),\n                    minStep: this.opts.minutesStep,\n                    minValue: lz(this.minutes)\n                },\n                _template = dp.template(template, data);\n\n            this.$timepicker = $(_template).appendTo(this.d.$datepicker);\n            this.$ranges = $('[type=\"range\"]', this.$timepicker);\n            this.$hours = $('[name=\"hours\"]', this.$timepicker);\n            this.$minutes = $('[name=\"minutes\"]', this.$timepicker);\n            this.$hoursText = $('.datepicker--time-current-hours', this.$timepicker);\n            this.$minutesText = $('.datepicker--time-current-minutes', this.$timepicker);\n\n            if (this.d.ampm) {\n                this.$ampm = $('<span class=\"datepicker--time-current-ampm\">')\n                    .appendTo($('.datepicker--time-current', this.$timepicker))\n                    .html(this.dayPeriod);\n\n                this.$timepicker.addClass('-am-pm-');\n            }\n        },\n\n        _updateCurrentTime: function () {\n            var h =  dp.getLeadingZeroNum(this.displayHours),\n                m = dp.getLeadingZeroNum(this.minutes);\n\n            this.$hoursText.html(h);\n            this.$minutesText.html(m);\n\n            if (this.d.ampm) {\n                this.$ampm.html(this.dayPeriod);\n            }\n        },\n\n        _updateRanges: function () {\n            this.$hours.attr({\n                min: this.minHours,\n                max: this.maxHours\n            }).val(this.hours);\n\n            this.$minutes.attr({\n                min: this.minMinutes,\n                max: this.maxMinutes\n            }).val(this.minutes)\n        },\n\n        /**\n         * Sets minHours, minMinutes etc. from date. If date is not passed, than sets\n         * values from options\n         * @param [date] {object} - Date object, to get values from\n         * @private\n         */\n        _handleDate: function (date) {\n            this._setDefaultMinMaxTime();\n            if (date) {\n                if (dp.isSame(date, this.d.opts.minDate)) {\n                    this._setMinTimeFromDate(this.d.opts.minDate);\n                } else if (dp.isSame(date, this.d.opts.maxDate)) {\n                    this._setMaxTimeFromDate(this.d.opts.maxDate);\n                }\n            }\n\n            this._validateHoursMinutes(date);\n        },\n\n        update: function () {\n            this._updateRanges();\n            this._updateCurrentTime();\n        },\n\n        /**\n         * Calculates valid hour value to display in text input and datepicker's body.\n         * @param date {Date|Number} - date or hours\n         * @param [ampm] {Boolean} - 12 hours mode\n         * @returns {{hours: *, dayPeriod: string}}\n         * @private\n         */\n        _getValidHoursFromDate: function (date, ampm) {\n            var d = date,\n                hours = date;\n\n            if (date instanceof Date) {\n                d = dp.getParsedDate(date);\n                hours = d.hours;\n            }\n\n            var _ampm = ampm || this.d.ampm,\n                dayPeriod = 'am';\n\n            if (_ampm) {\n                switch(true) {\n                    case hours == 0:\n                        hours = 12;\n                        break;\n                    case hours == 12:\n                        dayPeriod = 'pm';\n                        break;\n                    case hours > 11:\n                        hours = hours - 12;\n                        dayPeriod = 'pm';\n                        break;\n                    default:\n                        break;\n                }\n            }\n\n            return {\n                hours: hours,\n                dayPeriod: dayPeriod\n            }\n        },\n\n        set hours (val) {\n            this._hours = val;\n\n            var displayHours = this._getValidHoursFromDate(val);\n\n            this.displayHours = displayHours.hours;\n            this.dayPeriod = displayHours.dayPeriod;\n        },\n\n        get hours() {\n            return this._hours;\n        },\n\n        //  Events\n        // -------------------------------------------------\n\n        _onChangeRange: function (e) {\n            var $target = $(e.target),\n                name = $target.attr('name');\n            \n            this.d.timepickerIsActive = true;\n\n            this[name] = $target.val();\n            this._updateCurrentTime();\n            this.d._trigger('timeChange', [this.hours, this.minutes]);\n\n            this._handleDate(this.d.lastSelectedDate);\n            this.update()\n        },\n\n        _onSelectDate: function (e, data) {\n            this._handleDate(data);\n            this.update();\n        },\n\n        _onMouseEnterRange: function (e) {\n            var name = $(e.target).attr('name');\n            $('.datepicker--time-current-' + name, this.$timepicker).addClass('-focus-');\n        },\n\n        _onMouseOutRange: function (e) {\n            var name = $(e.target).attr('name');\n            if (this.d.inFocus) return; // Prevent removing focus when mouse out of range slider\n            $('.datepicker--time-current-' + name, this.$timepicker).removeClass('-focus-');\n        },\n\n        _onMouseUpRange: function (e) {\n            this.d.timepickerIsActive = false;\n        }\n    };\n})();\n })(window, jQuery);","$(document).ready(function() {\r\n  $('.dropdown-option__confirm').on('click', function() {\r\n    $('.dropdown').hide();\r\n  });\r\n  $(document).on('click', function (e) {\r\n    if ($(e.target).closest(\".dropdown-wrapper\").length === 0) {\r\n        $(\".dropdown\").hide();\r\n    }\r\n  });\r\n  $('.dropdown-input').on('focus', function() {\r\n      $(this).siblings('.dropdown').show();\r\n  });\r\n  $('.dropdown').hide();\r\n})","/*jshint multistr:true, curly: false */\r\n/*global jQuery:false, define: false */\r\n/**\r\n * jRange - Awesome range control\r\n *\r\n * Written by\r\n * ----------\r\n * Nitin Hayaran (nitinhayaran@gmail.com)\r\n *\r\n * Licensed under the MIT (MIT-LICENSE.txt).\r\n *\r\n * @author Nitin Hayaran\r\n * @version 0.1-RELEASE\r\n *\r\n * Dependencies\r\n * ------------\r\n * jQuery (http://jquery.com)\r\n *\r\n **/\r\n;\r\n(function($, window, document, undefined) {\r\n\t'use strict';\r\n\r\n\tvar jRange = function() {\r\n\t\treturn this.init.apply(this, arguments);\r\n\t};\r\n\tjRange.prototype = {\r\n\t\tdefaults: {\r\n\t\t\tonstatechange: function() {},\r\n      ondragend: function() {},\r\n      onbarclicked: function() {},\r\n\t\t\tisRange: false,\r\n\t\t\tshowLabels: false,\r\n\t\t\tshowScale: false,\r\n\t\t\tstep: 1,\r\n\t\t\tformat: '%s',\r\n\t\t\ttheme: 'theme-green',\r\n\t\t\twidth: 266,\r\n\t\t\tdisable: false,\r\n\t\t\tsnap: false\r\n\t\t},\r\n\t\ttemplate: '<div class=\"slider-container\">\\\r\n\t\t\t<div class=\"back-bar\">\\\r\n                <div class=\"selected-bar\"></div>\\\r\n                <div class=\"pointer low\"></div><div class=\"pointer-label low\">123456</div>\\\r\n                <div class=\"pointer high\"></div><div class=\"pointer-label high\">456789</div>\\\r\n                <div class=\"clickable-dummy\"></div>\\\r\n            </div>\\\r\n            <div class=\"scale\"></div>\\\r\n\t\t</div>',\r\n\t\tinit: function(node, options) {\r\n\t\t\tthis.options       = $.extend({}, this.defaults, options);\r\n\t\t\tthis.inputNode     = $(node);\r\n\t\t\tthis.options.value = this.inputNode.val() || (this.options.isRange ? this.options.from + ',' + this.options.from : '' + this.options.from);\r\n\t\t\tthis.domNode       = $(this.template);\r\n\t\t\tthis.domNode.addClass(this.options.theme);\r\n\t\t\tthis.inputNode.after(this.domNode);\r\n\t\t\tthis.domNode.on('change', this.onChange);\r\n\t\t\tthis.pointers      = $('.pointer', this.domNode);\r\n\t\t\tthis.lowPointer    = this.pointers.first();\r\n\t\t\tthis.highPointer   = this.pointers.last();\r\n\t\t\tthis.labels        = $('.pointer-label', this.domNode);\r\n\t\t\tthis.lowLabel      = this.labels.first();\r\n\t\t\tthis.highLabel     = this.labels.last();\r\n\t\t\tthis.scale         = $('.scale', this.domNode);\r\n\t\t\tthis.bar           = $('.selected-bar', this.domNode);\r\n\t\t\tthis.clickableBar  = this.domNode.find('.clickable-dummy');\r\n\t\t\tthis.interval      = this.options.to - this.options.from;\r\n\t\t\tthis.render();\r\n\t\t},\r\n\t\trender: function() {\r\n\t\t\t// Check if inputNode is visible, and have some width, so that we can set slider width accordingly.\r\n\t\t\tif (this.inputNode.width() === 0 && !this.options.width) {\r\n\t\t\t\tconsole.log('jRange : no width found, returning');\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tthis.options.width = this.options.width || this.inputNode.width();\r\n\t\t\t\tthis.domNode.width(this.options.width);\r\n\t\t\t\tthis.inputNode.hide();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.isSingle()) {\r\n\t\t\t\tthis.lowPointer.hide();\r\n\t\t\t\tthis.lowLabel.hide();\r\n\t\t\t}\r\n\t\t\tif (!this.options.showLabels) {\r\n\t\t\t\tthis.labels.hide();\r\n\t\t\t}\r\n\t\t\tthis.attachEvents();\r\n\t\t\tif (this.options.showScale) {\r\n\t\t\t\tthis.renderScale();\r\n\t\t\t}\r\n\t\t\tthis.setValue(this.options.value);\r\n\t\t},\r\n\t\tisSingle: function() {\r\n\t\t\tif (typeof(this.options.value) === 'number') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn (this.options.value.indexOf(',') !== -1 || this.options.isRange) ?\r\n\t\t\t\tfalse : true;\r\n\t\t},\r\n\t\tattachEvents: function() {\r\n\t\t\tthis.clickableBar.click($.proxy(this.barClicked, this));\r\n\t\t\tthis.pointers.on('mousedown touchstart', $.proxy(this.onDragStart, this));\r\n\t\t\tthis.pointers.bind('dragstart', function(event) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t});\r\n\t\t},\r\n\t\tonDragStart: function(e) {\r\n\t\t\tif ( this.options.disable || (e.type === 'mousedown' && e.which !== 1)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t\tvar pointer = $(e.target);\r\n\t\t\tthis.pointers.removeClass('last-active');\r\n\t\t\tpointer.addClass('focused last-active');\r\n\t\t\tthis[(pointer.hasClass('low') ? 'low' : 'high') + 'Label'].addClass('focused');\r\n\t\t\t$(document).on('mousemove.slider touchmove.slider', $.proxy(this.onDrag, this, pointer));\r\n\t\t\t$(document).on('mouseup.slider touchend.slider touchcancel.slider', $.proxy(this.onDragEnd, this));\r\n\t\t},\r\n\t\tonDrag: function(pointer, e) {\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\tif (e.originalEvent.touches && e.originalEvent.touches.length) {\r\n\t\t\t\te = e.originalEvent.touches[0];\r\n\t\t\t} else if (e.originalEvent.changedTouches && e.originalEvent.changedTouches.length) {\r\n\t\t\t\te = e.originalEvent.changedTouches[0];\r\n\t\t\t}\r\n\r\n\t\t\tvar position = e.clientX - this.domNode.offset().left;\r\n\t\t\tthis.domNode.trigger('change', [this, pointer, position]);\r\n\t\t},\r\n\t\tonDragEnd: function(e) {\r\n\t\t\tthis.pointers.removeClass('focused')\r\n\t\t\t\t.trigger('rangeslideend');\r\n\t\t\tthis.labels.removeClass('focused');\r\n\t\t\t$(document).off('.slider');\r\n\t\t  this.options.ondragend.call(this, this.options.value);\r\n\t\t},\r\n\t\tbarClicked: function(e) {\r\n\t\t\tif(this.options.disable) return;\r\n\t\t\tvar x = e.pageX - this.clickableBar.offset().left;\r\n\t\t\tif (this.isSingle())\r\n\t\t\t\tthis.setPosition(this.pointers.last(), x, true, true);\r\n\t\t\telse {\r\n\t\t\t\tvar firstLeft      \t= Math.abs(parseFloat(this.pointers.first().css('left'), 10)),\r\n\t\t\t\t\t\tfirstHalfWidth \t= this.pointers.first().width() / 2,\r\n\t\t\t\t\t\tlastLeft \t\t\t \t= Math.abs(parseFloat(this.pointers.last().css('left'), 10)),\r\n\t\t\t\t\t\tlastHalfWidth  \t= this.pointers.first().width() / 2,\r\n\t\t\t\t\t\tleftSide        = Math.abs(firstLeft - x + firstHalfWidth),\r\n\t\t\t\t\t\trightSide       = Math.abs(lastLeft - x + lastHalfWidth),\r\n\t\t\t\t\t\tpointer;\r\n\r\n\t\t\t\tif(leftSide == rightSide) {\r\n\t\t\t\t\tpointer = x < firstLeft ? this.pointers.first() : this.pointers.last();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpointer = leftSide < rightSide ? this.pointers.first() : this.pointers.last();\r\n\t\t\t\t}\r\n\t\t\t\tthis.setPosition(pointer, x, true, true);\r\n\t\t\t}\r\n\t\t\tthis.options.onbarclicked.call(this, this.options.value);\r\n\t\t},\r\n\t\tonChange: function(e, self, pointer, position) {\r\n\t\t\tvar min, max;\r\n\t\t\tmin = 0;\r\n\t\t\tmax = self.domNode.width();\r\n\r\n\t\t\tif (!self.isSingle()) {\r\n\t\t\t\tmin = pointer.hasClass('high') ? parseFloat(self.lowPointer.css(\"left\")) + (self.lowPointer.width() / 2) : 0;\r\n\t\t\t\tmax = pointer.hasClass('low') ? parseFloat(self.highPointer.css(\"left\")) + (self.highPointer.width() / 2) : self.domNode.width();\r\n\t\t\t}\r\n\r\n\t\t\tvar value = Math.min(Math.max(position, min), max);\r\n\t\t\tself.setPosition(pointer, value, true);\r\n\t\t},\r\n\t\tsetPosition: function(pointer, position, isPx, animate) {\r\n\t\t\tvar leftPos, rightPos,\r\n\t\t\t\tlowPos = parseFloat(this.lowPointer.css(\"left\")),\r\n\t\t\t\thighPos = parseFloat(this.highPointer.css(\"left\")) || 0,\r\n\t\t\t\tcircleWidth = this.highPointer.width() / 2;\r\n\t\t\tif (!isPx) {\r\n\t\t\t\tposition = this.prcToPx(position);\r\n\t\t\t}\r\n\t\t\tif(this.options.snap){\r\n\t\t\t\tvar expPos = this.correctPositionForSnap(position);\r\n\t\t\t\tif(expPos === -1){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tposition = expPos;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (pointer[0] === this.highPointer[0]) {\r\n\t\t\t\thighPos = Math.round(position - circleWidth);\r\n\t\t\t} else {\r\n\t\t\t\tlowPos = Math.round(position - circleWidth);\r\n\t\t\t}\r\n\t\t\tpointer[animate ? 'animate' : 'css']({\r\n\t\t\t\t'left': Math.round(position - circleWidth)\r\n\t\t\t});\r\n\t\t\tif (this.isSingle()) {\r\n\t\t\t\tleftPos = 0;\r\n\t\t\t} else {\r\n\t\t\t\tleftPos = lowPos + circleWidth;\r\n\t\t\t\trightPos = highPos + circleWidth;\r\n\t\t\t}\r\n\t\t\tvar w = Math.round(highPos + circleWidth - leftPos);\r\n\t\t\tthis.bar[animate ? 'animate' : 'css']({\r\n\t\t\t\t'width': Math.abs(w),\r\n\t\t\t\t'left': (w>0) ? leftPos : leftPos + w\r\n\t\t\t});\r\n\t\t\tthis.showPointerValue(pointer, position, animate);\r\n\t\t\tthis.isReadonly();\r\n\t\t},\r\n\t\tcorrectPositionForSnap: function(position){\r\n\t\t\tvar currentValue = this.positionToValue(position) - this.options.from;\r\n\t\t\tvar diff = this.options.width / (this.interval / this.options.step),\r\n\t\t\t\texpectedPosition = (currentValue / this.options.step) * diff;\r\n\t\t\tif( position <= expectedPosition + diff / 2 && position >= expectedPosition - diff / 2){\r\n\t\t\t\treturn expectedPosition;\r\n\t\t\t}else{\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t},\r\n\t\t// will be called from outside\r\n\t\tsetValue: function(value) {\r\n\t\t\tvar values = value.toString().split(',');\r\n\t\t\tvalues[0] = Math.min(Math.max(values[0], this.options.from), this.options.to) + '';\r\n\t\t\tif (values.length > 1){\r\n\t\t\t\tvalues[1] = Math.min(Math.max(values[1], this.options.from), this.options.to) + '';\r\n\t\t\t}\r\n\t\t\tthis.options.value = value;\r\n\t\t\tvar prc = this.valuesToPrc(values.length === 2 ? values : [0, values[0]]);\r\n\t\t\tif (this.isSingle()) {\r\n\t\t\t\tthis.setPosition(this.highPointer, prc[1]);\r\n\t\t\t} else {\r\n\t\t\t\tthis.setPosition(this.lowPointer, prc[0]);\r\n\t\t\t\tthis.setPosition(this.highPointer, prc[1]);\r\n\t\t\t}\r\n\t\t},\r\n\t\trenderScale: function() {\r\n\t\t\tvar s = this.options.scale || [this.options.from, this.options.to];\r\n\t\t\tvar prc = Math.round((100 / (s.length - 1)) * 10) / 10;\r\n\t\t\tvar str = '';\r\n\t\t\tfor (var i = 0; i < s.length; i++) {\r\n\t\t\t\tstr += '<span style=\"left: ' + i * prc + '%\">' + (s[i] != '|' ? '<ins>' + s[i] + '</ins>' : '') + '</span>';\r\n\t\t\t}\r\n\t\t\tthis.scale.html(str);\r\n\r\n\t\t\t$('ins', this.scale).each(function() {\r\n\t\t\t\t$(this).css({\r\n\t\t\t\t\tmarginLeft: -$(this).outerWidth() / 2\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\t\tgetBarWidth: function() {\r\n\t\t\tvar values = this.options.value.split(',');\r\n\t\t\tif (values.length > 1) {\r\n\t\t\t\treturn parseFloat(values[1]) - parseFloat(values[0]);\r\n\t\t\t} else {\r\n\t\t\t\treturn parseFloat(values[0]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tshowPointerValue: function(pointer, position, animate) {\r\n\t\t\tvar label = $('.pointer-label', this.domNode)[pointer.hasClass('low') ? 'first' : 'last']();\r\n\t\t\tvar text;\r\n\t\t\tvar value = this.positionToValue(position);\r\n\t\t\t// Is it higer or lower than it should be?\r\n\r\n\t\t\tif ($.isFunction(this.options.format)) {\r\n\t\t\t\tvar type = this.isSingle() ? undefined : (pointer.hasClass('low') ? 'low' : 'high');\r\n\t\t\t\ttext = this.options.format(value, type);\r\n\t\t\t} else {\r\n\t\t\t\ttext = this.options.format.replace('%s', value);\r\n\t\t\t}\r\n\r\n\t\t\tvar width = label.html(text).width(),\r\n\t\t\t\tleft = position - width / 2;\r\n\t\t\tleft = Math.min(Math.max(left, 0), this.options.width - width);\r\n\t\t\tlabel[animate ? 'animate' : 'css']({\r\n\t\t\t\tleft: left\r\n\t\t\t});\r\n\t\t\tthis.setInputValue(pointer, value);\r\n\t\t},\r\n\t\tvaluesToPrc: function(values) {\r\n\t\t\tvar lowPrc = ((parseFloat(values[0]) - parseFloat(this.options.from)) * 100 / this.interval),\r\n\t\t\t\thighPrc = ((parseFloat(values[1]) - parseFloat(this.options.from)) * 100 / this.interval);\r\n\t\t\treturn [lowPrc, highPrc];\r\n\t\t},\r\n\t\tprcToPx: function(prc) {\r\n\t\t\treturn (this.domNode.width() * prc) / 100;\r\n\t\t},\r\n\t\tisDecimal: function() {\r\n\t\t\treturn ((this.options.value + this.options.from + this.options.to).indexOf(\".\")===-1) ? false : true;\r\n\t\t},\r\n\t\tpositionToValue: function(pos) {\r\n\t\t\tvar value = (pos / this.domNode.width()) * this.interval;\r\n\t\t\tvalue = parseFloat(value, 10) + parseFloat(this.options.from, 10);\r\n\t\t\tif (this.isDecimal()) {\r\n\t\t\t\tvar final = Math.round(Math.round(value / this.options.step) * this.options.step *100)/100;\r\n\t\t\t\tif (final!==0.0) {\r\n\t\t\t\t\tfinal = '' + final;\r\n\t\t\t\t\tif (final.indexOf(\".\")===-1) {\r\n\t\t\t\t\t\tfinal = final + \".\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\twhile (final.length - final.indexOf('.')<3) {\r\n\t\t\t\t\t\tfinal = final + \"0\";\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfinal = \"0.00\";\r\n\t\t\t\t}\r\n\t\t\t\treturn final;\r\n\t\t\t} else {\r\n\t\t\t\treturn Math.round(value / this.options.step) * this.options.step;\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetInputValue: function(pointer, v) {\r\n\t\t\t// if(!isChanged) return;\r\n\t\t\tif (this.isSingle()) {\r\n\t\t\t\tthis.options.value = v.toString();\r\n\t\t\t} else {\r\n\t\t\t\tvar values = this.options.value.split(',');\r\n\t\t\t\tif (pointer.hasClass('low')) {\r\n\t\t\t\t\tthis.options.value = v + ',' + values[1];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.options.value = values[0] + ',' + v;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.inputNode.val() !== this.options.value) {\r\n\t\t\t\tthis.inputNode.val(this.options.value)\r\n\t\t\t\t\t.trigger('change');\r\n\t\t\t\tthis.options.onstatechange.call(this, this.options.value);\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetValue: function() {\r\n\t\t\treturn this.options.value;\r\n\t\t},\r\n\t\tgetOptions: function() {\r\n\t\t\treturn this.options;\r\n\t\t},\r\n\t\tgetRange: function() {\r\n\t\t\treturn this.options.from + \",\" + this.options.to;\r\n\t\t},\r\n\t\tisReadonly: function(){\r\n\t\t\tthis.domNode.toggleClass('slider-readonly', this.options.disable);\r\n\t\t},\r\n\t\tdisable: function(){\r\n\t\t\tthis.options.disable = true;\r\n\t\t\tthis.isReadonly();\r\n\t\t},\r\n\t\tenable: function(){\r\n\t\t\tthis.options.disable = false;\r\n\t\t\tthis.isReadonly();\r\n\t\t},\r\n\t\ttoggleDisable: function(){\r\n\t\t\tthis.options.disable = !this.options.disable;\r\n\t\t\tthis.isReadonly();\r\n\t\t},\r\n\t\tupdateRange: function(range, value) {\r\n\t\t\tvar values = range.toString().split(',');\r\n\t\t\tthis.interval = parseInt(values[1]) - parseInt(values[0]);\r\n\t\t\tif(value){\r\n\t\t\t\tthis.setValue(value);\r\n\t\t\t}else{\r\n\t\t\t\tthis.setValue(this.getValue());\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar pluginName = 'jRange';\r\n\t// A really lightweight plugin wrapper around the constructor,\r\n\t// preventing against multiple instantiations\r\n\t$.fn[pluginName] = function(option) {\r\n\t\tvar args = arguments,\r\n\t\t\tresult;\r\n\r\n\t\tthis.each(function() {\r\n\t\t\tvar $this = $(this),\r\n\t\t\t\tdata = $.data(this, 'plugin_' + pluginName),\r\n\t\t\t\toptions = typeof option === 'object' && option;\r\n\t\t\tif (!data) {\r\n\t\t\t\t$this.data('plugin_' + pluginName, (data = new jRange(this, options)));\r\n\t\t\t\t$(window).resize(function() {\r\n\t\t\t\t\tdata.setValue(data.getValue());\r\n\t\t\t\t}); // Update slider position when window is resized to keep it in sync with scale\r\n\t\t\t}\r\n\t\t\t// if first argument is a string, call silimarly named function\r\n\t\t\t// this gives flexibility to call functions of the plugin e.g.\r\n\t\t\t//   - $('.dial').plugin('destroy');\r\n\t\t\t//   - $('.dial').plugin('render', $('.new-child'));\r\n\t\t\tif (typeof option === 'string') {\r\n\t\t\t\tresult = data[option].apply(data, Array.prototype.slice.call(args, 1));\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// To enable plugin returns values\r\n\t\t$('.range-slider__prices-output_low').html(5000);\r\n\t\t$('.range-slider__prices-output_high').html(10000);\r\n\t\treturn result || this;\r\n\t};\r\n\r\n\t\r\n\r\n})(jQuery, window, document);\r\n","import main from './main';\r\nimport '../blocks/checkbox-list/checkbox-list';\r\nimport '../blocks/datepicker/datepicker';\r\nimport '../blocks/dropdown/dropdown';\r\nimport '../blocks/range-slider/range-slider';\r\n\r\nmain();\r\n\r\n$(document).ready(function() {\r\n  $('.datepicker-plugin').datepicker({\r\n    range: true,\r\n    multipleDatesSeparator: \" - \",\r\n    position: \"bottom center\", \r\n    clearButton: true\r\n  })\r\n\r\n  $('.range-slider-bar').jRange({\r\n    from: 1,\r\n    to: 30000,\r\n    step: 500,\r\n    isRange : true\r\n    });\r\n});"]}